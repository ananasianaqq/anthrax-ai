Engine::Gfx() -- Vukan() -- Renderer() --
Engine::Core()::Windows()
Engine::Core()::Sync()

Engine::Assets() - ? 

Engine::Editor()
Engine::Scene() -- Resources()

1. Engine class - basic class that handles singleton instances and modes (Vulkan class,Renderer class, Debug class, Scene class, UI class, engine state)

- starting from creation of instances for classes
- handling destroy

2. Vulkan:
- vulkan instance
- surface
- log & phys dev
- swapchain
- image views
- command pool
- depth & main image (render targets)
- renderpass + framebuffers -> dynamic rendering
- sync
- descriptors

3. Renderer handles rendering and command buffers

4. Scene: handles what resources are used by scene, uploads models and stuff

5. UI - everything with imgui